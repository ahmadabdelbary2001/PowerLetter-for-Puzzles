(function(){"use strict";const l={};function u(r){return r.normalize("NFC").replace(/[\u064B-\u065F\u0610-\u061A\u06D6-\u06ED]/g,"").replace(/[إأآ]/g,"ا").replace(/[ى]/g,"ي").replace(/ؤ/g,"و").replace(/ئ/g,"ي").replace(/ة/g,"ه").trim()}function f(r,t){return t==="ar"?u(r):r.normalize("NFC").toLocaleUpperCase()}async function d(r,t){const e=`${t}-${r}`;if(l[e])return l[e];const n=new Set;try{const a=await import(`/src/data/${t}/${r}/clue/${r}-clue-${t}-words.json`).catch(()=>null);a&&((a.default&&Array.isArray(a.default)?a.default:a.default?.words??a.words??[])??[]).forEach(s=>{s&&n.add(f(String(s),r))})}catch(o){console.error(`Solver: Failed to build wordset for ${e}`,o)}return l[e]=n,n}function p(r,t){const e={};for(const n of t){const o=n.normalize("NFC");e[o]=(e[o]??0)+1}for(const n of r.split("")){const o=n.normalize("NFC");if(!e[o]||e[o]<=0)return!1;e[o]--}return!0}async function m(r,t,e,n=2){const o=await d(t,e);if(!o||o.size===0)return[];const a=r.map(s=>t==="ar"?u(s):s.normalize("NFC").toLocaleUpperCase()),c=[];for(const s of o){const i=t==="ar"?u(s):s.normalize("NFC").toLocaleUpperCase();i.length<n||p(i,a)&&c.push(s)}return c}self.addEventListener("message",async r=>{const t=r.data;if(!t||typeof t!="object")return;const e=t;if(e.type!=="find")return;const n=e.lang==="ar"?"ar":"en",o=e.minLen??2,a=e.letters??[],c=e.category;if(!c){console.error("Solver: Category not provided in 'find' message."),postMessage({id:e.id,type:"result",results:[]});return}const s=await m(a,n,c,o),i={id:e.id,type:"result",results:s};postMessage(i)})})();
